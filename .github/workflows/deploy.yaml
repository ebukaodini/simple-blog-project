name: Deploy to production

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json
          npm install --force

      - name: Export Variables
        run: |
          echo PORT=80 >> .env
          echo NODE_ENV="production" >> .env  
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo VPC_SECURITY_GROUP=${{ secrets.VPC_SECURITY_GROUP }} >> .env
          echo VPC_SUBNET_1=${{ secrets.VPC_SUBNET_1 }} >> .env
          echo VPC_SUBNET_2=${{ secrets.VPC_SUBNET_2 }} >> .env
          echo VPC_SUBNET_3=${{ secrets.VPC_SUBNET_3 }} >> .env
          echo VPC_SUBNET_4=${{ secrets.VPC_SUBNET_4 }} >> .env
          echo VPC_SUBNET_5=${{ secrets.VPC_SUBNET_5 }} >> .env
          echo VPC_SUBNET_6=${{ secrets.VPC_SUBNET_6 }} >> .env

      - name: Serverless deploy
        run: npx sls deploy -s production -r us-east-1 -c serverless.yml
